Import('env')

env = env.Clone()

env['MBED_LIB_LINKSCRIPTS_ROOT'] = Dir('mbed/hal').srcnode()

SConscript('mbed-scons/targets/SConscript-mbed-env-stm32l432kc', exports='env',
           duplicate=0)

env.Append(CCFLAGS = ['-w'])

mbed_lib = env.MbedLikeLibrary(
    'mbed', 'mbed/hal/',
    ['api/', 'common/', 'hal/', 'targets/cmsis/', 'targets/hal/']
)
env.Prepend(LIBS = mbed_lib)

env.Append(LINKFLAGS=[
  '-Wl,--whole-archive',  # used to compile mbed HAL, which uses funky weak symbols
  mbed_lib,
  '-Wl,--no-whole-archive',
  '--specs=nosys.specs',
])

# Top-level build flow
env = env.Clone()

env['CCFLAGS'].remove('-w')
env.Append(CCFLAGS = ['-Werror', '-Wall'])

application = env.Program(
  target = '../application-stm32l432kc',
  source = Glob('application/*.cpp'),
)
env.Depends(application, env['MBED_LINKSCRIPT'])

binary = env.Objcopy(application)
env.Objdump(application)
env.SymbolsSize(application)

Return('binary')
